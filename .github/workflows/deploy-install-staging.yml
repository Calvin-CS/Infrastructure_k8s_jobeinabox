name: Deploy to staging

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-24.04
    env:
      NAMESPACE: staging
      IMAGETAG: staging
    steps:
      - uses: actions/checkout@v4

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha    
      
      - name: Configure Kubeconfig
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.K3S_ONPREM_KUBECONFIG }}
        id: setcontext    

      - name: Install Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: latest

      - name: Make Wireguard connection
        run: |
          echo "**** Install Wireguard ****"
          sudo apt install -y wireguard
          echo "**** Add Wireguard private key ****"
          echo "${{ secrets.WG_PRIVATEKEY }}" > /tmp/wgprivatekey
          echo "**** Wireguard add dev wg0 ****"          
          sudo ip link add dev wg0 type wireguard
          echo "**** Wireguard add IP information up ****"
          sudo ip address add dev wg0 172.16.200.3/29
          echo "**** Wireguard set peer information ****"
          sudo wg set wg0 listen-port 51820 private-key /tmp/wgprivatekey peer uFl3byQphA02N5nR29v8IjiFeL15mN+mWrmAFQ/TMGk= allowed-ips 172.16.200.0/29,${{ secrets.WG_ALLOWEDIPS }} endpoint ${{ secrets.WG_HOST }}:${{ secrets.WG_PORT }} persistent-keepalive 15
          echo "**** Wireguard up wg0 ****"
          sudo ip link set up dev wg0
          echo "**** Wireguard add routes ****"
          sudo ip route add ${{ secrets.WG_ALLOWEDIPS }} via 172.16.200.1 dev wg0
          echo "**** Show wg0 status ****"
          sudo wg

      - name: Run Helm Deploy
        run: |
          helm upgrade \
            --install \
            --atomic \
            --wait \
            --namespace ${{ env.NAMESPACE }} \
            jobeinabox \
           ./kubernetes/jobeinabox \
            --set image.repository=${{ secrets.ACR_NAME }} \
            --set image.tag=${{ env.IMAGETAG }}
